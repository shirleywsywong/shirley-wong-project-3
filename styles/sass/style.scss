@import "partials/setup";
@import "partials/global";

//layout styles
body {
    background: $limeGreen;
    justify-content: center;
    font-family: 'Righteous', cursive;
}
h1 {
    text-align: center;
    font-size: 4rem;
    line-height: 0;
    @include for-desktop {
        font-size: 5rem;
    }
}
p {
    place-self: center;
    text-align: center;
    margin: 0;
}
.instructions {
    margin: 0 auto;
    max-width: 900px;
    font-size: 2rem;
}

//gameboard styles
.grid {
    @include parent(80vw, 0 auto, 1.5rem);
    height: 80vw;
    @include grid(repeat(3, 1fr), repeat(3, 1fr));
    @include for-desktop {
        width: 55vh;
        height: 55vh;
    }
}
.gridOverlay {
    @include parent(80vw, 0 auto, 1.5rem);
    height: 80vw;
    background: $pink;
    @include grid(repeat(2, 1fr), 1fr);
    @include for-desktop {
        width: 55vh;
        height: 55vh;
    }
    .item {
        height: 30%;
    }
}

//game board element styles
.item {
    @include children;
    place-self: center;
    width: 100%;
    height: 100%;
    svg {
        width: 50%;
        place-self: center;
        animation: rotation 5s infinite linear;
    }
    p {font-size: 2rem;
        @include for-desktop {
            font-size: 3rem;
        }
    }
}
//spinning circle animation
@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(90deg);
  }
}

//hud styles
.hud {
    @include parent(80vw, 1.5rem auto 2rem auto, 1rem);
    @include grid(repeat(2, 1fr), 1fr);
    align-items: stretch;
    @include for-desktop {
        width: 55vh;
    }
}

//turn indicator styles
.turn {
    @include children;
    p{
        font-size: 2rem;
        @include for-desktop {
            font-size: 3rem;
        }
    }
}

//animation when a character is added to element
.turnAnimate {
    text-align: center;
    animation: turn-style 0.4s cubic-bezier(.65,.05,.36,1) both;
}
@keyframes turn-style {
  from {
    transform: scale(0.05);
  }
  to {
    transform: scale(1);   
  }
}

// box shadow for unclicked elements
.active {
    background: $darkGrey;
    box-shadow: 9px 9px $pine;
    transition: all linear 0.1s;
    &:active {
        box-shadow: 5px 5px $darkPine;
        transform: translate(4px, 4px);
    }
}

// box shadow for clicked elements
.inactive {
    background: $lightGrey;
    cursor: not-allowed;
    box-shadow: 5px 5px $darkPine;
}

// winning sequence animation
.win {
    animation: rotate-center 0.6s ease-in-out both; 
    background: $pink;
    p {
        color: $darkGrey;
        animation: anim-moema-1 0.5s forwards infinite;
        &::before {
            content: '';
            position: absolute;
            transform: scale3d(0.5, 0.5, 0.5);
        }
    }
}
@keyframes rotate-center {
    0% {
        transform: rotate(0);
    }
    100% {
        transform: rotate(360deg);
    }
}
@keyframes anim-moema-1 {
	60% {
		-webkit-transform: scale3d(0.8, 0.8, 1);
		transform: scale3d(0.8, 0.8, 1);
	}
	85% {
		-webkit-transform: scale3d(1.1, 1.1, 1);
		transform: scale3d(2, 2, 1);
	}
	100% {
		-webkit-transform: scale3d(1, 1, 1);
		transform: scale3d(1, 1, 1);
	}
}

.reset {
    @include grid(1fr, 1fr);
}